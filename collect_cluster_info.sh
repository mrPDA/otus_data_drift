#!/bin/bash

# üöÄ –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–ª–∞—Å—Ç–µ—Ä–µ DataProc –≤ Yandex Cloud
# –ê–≤—Ç–æ—Ä: –î–µ–Ω–∏—Å –ü—É–∫–∏–Ω–æ–≤
# –î–∞—Ç–∞: $(date +"%Y-%m-%d")
# –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –ë—ã—Å—Ç—Ä—ã–π —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∫–ª–∞—Å—Ç–µ—Ä–∞ –ò–ò

set -e

echo "üîç –°–ë–û–† –ò–ù–§–û–†–ú–ê–¶–ò–ò –î–õ–Ø –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Ø –ö–õ–ê–°–¢–ï–†–ê DATAPROC"
echo "=================================================================="
echo ""

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–µ–∫—Ü–∏–π
print_section() {
    echo -e "${BLUE}üìã $1${NC}"
    echo "----------------------------------------"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∑–Ω–∞—á–µ–Ω–∏–π
print_value() {
    echo -e "${GREEN}$1:${NC} $2"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –æ—à–∏–±–æ–∫
print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è yc CLI
if ! command -v yc &> /dev/null; then
    print_error "Yandex Cloud CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PATH"
    exit 1
fi

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
print_section "–ë–ê–ó–û–í–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø YANDEX CLOUD"
CLOUD_ID=$(yc config get cloud-id 2>/dev/null || echo "NOT_SET")
FOLDER_ID=$(yc config get folder-id 2>/dev/null || echo "NOT_SET")

print_value "Cloud ID" "$CLOUD_ID"
print_value "Folder ID" "$FOLDER_ID"
print_value "–ó–æ–Ω–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é" "ru-central1-a"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
print_section "–°–ï–†–í–ò–°–ù–´–ô –ê–ö–ö–ê–£–ù–¢"
if [ -f "create-admin-sa/admin-key.json" ]; then
    SA_ID=$(cat create-admin-sa/admin-key.json | grep -o '"service_account_id": "[^"]*"' | cut -d'"' -f4)
    print_value "Service Account ID" "$SA_ID"
    print_value "–ö–ª—é—á —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞" "create-admin-sa/admin-key.json ‚úÖ"
else
    print_error "–§–∞–π–ª –∫–ª—é—á–∞ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: create-admin-sa/admin-key.json"
fi
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ S3 –∫–ª—é—á–µ–π
print_section "S3 –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø"
if [ -f "create-admin-sa/s3-access-key.json" ]; then
    S3_ACCESS_KEY=$(cat create-admin-sa/s3-access-key.json | grep -o '"key_id": "[^"]*"' | cut -d'"' -f4)
    S3_SECRET_KEY=$(cat create-admin-sa/s3-access-key.json | grep -o '"secret": "[^"]*"' | cut -d'"' -f4)
    print_value "S3 Access Key" "${S3_ACCESS_KEY:0:10}...*** (—Å–∫—Ä—ã—Ç–æ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏)"
    print_value "S3 Secret Key" "***...*** (—Å–∫—Ä—ã—Ç–æ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏)"
    print_value "S3 Bucket" "otus-copy-$FOLDER_ID"
else
    print_error "–§–∞–π–ª S3 –∫–ª—é—á–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω: create-admin-sa/s3-access-key.json"
fi
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ SSH –∫–ª—é—á–µ–π
print_section "SSH –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø"
if [ -f "$HOME/.ssh/id_rsa.pub" ]; then
    SSH_KEY_SIZE=$(wc -c < "$HOME/.ssh/id_rsa.pub")
    print_value "SSH –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á" "$HOME/.ssh/id_rsa.pub ‚úÖ ($SSH_KEY_SIZE bytes)"
else
    print_warning "SSH –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º –º–µ—Å—Ç–µ: $HOME/.ssh/id_rsa.pub"
fi
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
print_section "–°–ï–¢–ï–í–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø"
echo "üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Ç—è—Ö..."
NETWORKS=$(yc vpc network list --format=json 2>/dev/null || echo "[]")
DEFAULT_NETWORK_ID=$(echo "$NETWORKS" | jq -r '.[] | select(.name=="default") | .id' 2>/dev/null || echo "")

if [ -n "$DEFAULT_NETWORK_ID" ] && [ "$DEFAULT_NETWORK_ID" != "null" ]; then
    print_value "Network ID (default)" "$DEFAULT_NETWORK_ID"
else
    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—É—é –¥–æ—Å—Ç—É–ø–Ω—É—é —Å–µ—Ç—å
    FIRST_NETWORK_ID=$(echo "$NETWORKS" | jq -r '.[0].id' 2>/dev/null || echo "")
    if [ -n "$FIRST_NETWORK_ID" ] && [ "$FIRST_NETWORK_ID" != "null" ]; then
        print_value "Network ID (–ø–µ—Ä–≤–∞—è –¥–æ—Å—Ç—É–ø–Ω–∞—è)" "$FIRST_NETWORK_ID"
    else
        print_error "–°–µ—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    fi
fi
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
print_section "–°–£–©–ï–°–¢–í–£–Æ–©–ò–ï –†–ï–°–£–†–°–´"
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–ª–∞—Å—Ç–µ—Ä–æ–≤ DataProc..."
CLUSTERS=$(yc dataproc cluster list --format=json 2>/dev/null || echo "[]")
CLUSTER_COUNT=$(echo "$CLUSTERS" | jq length 2>/dev/null || echo "0")
print_value "–ê–∫—Ç–∏–≤–Ω—ã–µ –∫–ª–∞—Å—Ç–µ—Ä—ã DataProc" "$CLUSTER_COUNT"

if [ "$CLUSTER_COUNT" -gt 0 ]; then
    echo "$CLUSTERS" | jq -r '.[] | "  - " + .name + " (ID: " + .id + ", Status: " + .status + ")"' 2>/dev/null || true
fi
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥—Ä—É–ø–ø –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥—Ä—É–ø–ø –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."
SECURITY_GROUPS=$(yc vpc security-group list --format=json 2>/dev/null || echo "[]")
SG_COUNT=$(echo "$SECURITY_GROUPS" | jq length 2>/dev/null || echo "0")
print_value "–ì—Ä—É–ø–ø—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏" "$SG_COUNT"

# –ò—â–µ–º –≥—Ä—É–ø–ø—É dataproc-security-group
DATAPROC_SG_ID=$(echo "$SECURITY_GROUPS" | jq -r '.[] | select(.name=="dataproc-security-group") | .id' 2>/dev/null || echo "")
if [ -n "$DATAPROC_SG_ID" ] && [ "$DATAPROC_SG_ID" != "null" ]; then
    print_value "DataProc Security Group" "$DATAPROC_SG_ID ‚úÖ"
fi
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥—Å–µ—Ç–µ–π
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥—Å–µ—Ç–µ–π..."
SUBNETS=$(yc vpc subnet list --format=json 2>/dev/null || echo "[]")
DATAPROC_SUBNET_ID=$(echo "$SUBNETS" | jq -r '.[] | select(.name=="dataproc-subnet") | .id' 2>/dev/null || echo "")
if [ -n "$DATAPROC_SUBNET_ID" ] && [ "$DATAPROC_SUBNET_ID" != "null" ]; then
    print_value "DataProc Subnet" "$DATAPROC_SUBNET_ID ‚úÖ"
fi
echo ""

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è terraform.tfvars
print_section "–ì–ï–ù–ï–†–ê–¶–ò–Ø TERRAFORM.TFVARS"
TFVARS_FILE="terraform.tfvars.generated"

cat > "$TFVARS_FILE" << EOF
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª terraform.tfvars
# –î–∞—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: $(date +"%Y-%m-%d %H:%M:%S")

# Yandex Cloud Configuration
cloud_id                   = "$CLOUD_ID"
folder_id                  = "$FOLDER_ID"
zone                       = "ru-central1-a"
service_account_key_file   = "create-admin-sa/admin-key.json"
service_account_id         = "$SA_ID"
network_id                 = "${DEFAULT_NETWORK_ID:-$FIRST_NETWORK_ID}"

# SSH Configuration
public_key_path            = "~/.ssh/id_rsa.pub"

# Cluster Configuration
cluster_name               = "spark-data-drift-cluster"

# S3 Configuration
s3_bucket                  = "otus-copy-$FOLDER_ID"
s3_access_key              = "REPLACE_WITH_YOUR_S3_ACCESS_KEY"
s3_secret_key              = "REPLACE_WITH_YOUR_S3_SECRET_KEY"
EOF

print_value "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —Ñ–∞–π–ª" "$TFVARS_FILE ‚úÖ"
echo ""

# –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–ª–∞—Å—Ç–µ—Ä–∞
print_section "–†–ï–ö–û–ú–ï–ù–î–£–ï–ú–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ö–õ–ê–°–¢–ï–†–ê"
cat << EOF
üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–¥–∫–ª–∞—Å—Ç–µ—Ä–æ–≤ –¥–ª—è main.tf:

üéØ Master –ø–æ–¥–∫–ª–∞—Å—Ç–µ—Ä:
  - –†–æ–ª—å: MASTERNODE
  - –ö–ª–∞—Å—Å —Ö–æ—Å—Ç–∞: s3-c2-m8 (2 vCPU, 8GB RAM)
  - –î–∏—Å–∫: 40GB network-ssd
  - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ö–æ—Å—Ç–æ–≤: 1

üíª Compute –ø–æ–¥–∫–ª–∞—Å—Ç–µ—Ä:
  - –†–æ–ª—å: COMPUTENODE  
  - –ö–ª–∞—Å—Å —Ö–æ—Å—Ç–∞: s3-c4-m16 (4 vCPU, 16GB RAM)
  - –î–∏—Å–∫: 128GB network-ssd
  - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ö–æ—Å—Ç–æ–≤: 2

üíæ Data –ø–æ–¥–∫–ª–∞—Å—Ç–µ—Ä:
  - –†–æ–ª—å: DATANODE
  - –ö–ª–∞—Å—Å —Ö–æ—Å—Ç–∞: s3-c2-m8 (2 vCPU, 8GB RAM)
  - –î–∏—Å–∫: 100GB network-ssd
  - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ö–æ—Å—Ç–æ–≤: 1

üìä –û–±—â–∏–µ —Ä–µ—Å—É—Ä—Å—ã: 12 vCPU, 48GB RAM, 368GB SSD
EOF
echo ""

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
print_section "–ö–û–ú–ê–ù–î–´ –î–õ–Ø –ë–´–°–¢–†–û–ì–û –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Ø"
cat << EOF
üöÄ –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–æ–º–∞–Ω–¥ –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è:

1. –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:
   cp $TFVARS_FILE terraform.tfvars

2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Terraform:
   terraform init

3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞–Ω–∞:
   terraform plan

4. –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∫–ª–∞—Å—Ç–µ—Ä–∞:
   terraform apply -auto-approve

5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞:
   yc dataproc cluster list

üîó –ü–æ—Å–ª–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –¥–æ—Å—Ç—É–ø –ø–æ SSH:
   ssh ubuntu@<MASTER_NODE_IP>

üìù Jupyter Notebook –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞:
   http://<MASTER_NODE_IP>:8888
EOF
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è terraform
print_section "–°–û–°–¢–û–Ø–ù–ò–ï TERRAFORM"
if [ -f "terraform.tfstate" ]; then
    TFSTATE_SIZE=$(wc -c < "terraform.tfstate")
    print_value "Terraform State" "terraform.tfstate ‚úÖ ($TFSTATE_SIZE bytes)"
    
    # –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ—Å—É—Ä—Å–∞—Ö –∏–∑ state
    if command -v terraform &> /dev/null; then
        RESOURCES_COUNT=$(terraform state list 2>/dev/null | wc -l || echo "0")
        print_value "–†–µ—Å—É—Ä—Å—ã –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏" "$RESOURCES_COUNT"
    fi
else
    print_warning "–§–∞–π–ª —Å–æ—Å—Ç–æ—è–Ω–∏—è terraform.tfstate –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi
echo ""

print_section "–ò–¢–û–ì–û–í–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø"
echo "‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ"
echo "üìÑ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: $TFVARS_FILE"
echo "üîÑ –î–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –≤—ã—à–µ"
echo ""
print_warning "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã –∫–ª—é—á–µ–π —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–¥ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ–º!"
echo ""
echo "=================================================================="
echo "üéØ –ì–æ—Ç–æ–≤–æ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –ò–ò –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∞—Å—Ç–µ—Ä–∞!"
