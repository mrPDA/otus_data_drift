#!/bin/bash

# üîå –°–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω–∏—è SSH —Ç—É–Ω–Ω–µ–ª—è –∫ –∫–ª–∞—Å—Ç–µ—Ä—É DataProc
# –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ Jupyter Notebook –∏ –¥—Ä—É–≥–∏–º —Å–µ—Ä–≤–∏—Å–∞–º

set -e

GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

print_step() {
    echo -e "${BLUE}üîÑ $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
CLUSTER_IP="62.84.116.68"
USERNAME="ubuntu"

echo "üîå –°–û–ó–î–ê–ù–ò–ï SSH –¢–£–ù–ù–ï–õ–Ø –ö –ö–õ–ê–°–¢–ï–†–£ DATAPROC"
echo "=============================================="
echo ""
print_info "–ö–ª–∞—Å—Ç–µ—Ä IP: $CLUSTER_IP"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∫–ª–∞—Å—Ç–µ—Ä–∞
print_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∫–ª–∞—Å—Ç–µ—Ä–∞"
if ping -c 1 -W 3000 "$CLUSTER_IP" >/dev/null 2>&1; then
    print_success "–ö–ª–∞—Å—Ç–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    print_warning "–ö–ª–∞—Å—Ç–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ ping (–≤–æ–∑–º–æ–∂–Ω–æ, ICMP –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω)"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ SSH –∫–ª—é—á–µ–π
print_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ SSH –∫–ª—é—á–µ–π"
if [ -f ~/.ssh/id_rsa ]; then
    print_success "SSH –∫–ª—é—á –Ω–∞–π–¥–µ–Ω: ~/.ssh/id_rsa"
elif [ -f ~/.ssh/id_ed25519 ]; then
    print_success "SSH –∫–ª—é—á –Ω–∞–π–¥–µ–Ω: ~/.ssh/id_ed25519"
else
    print_error "SSH –∫–ª—é—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ ~/.ssh/"
    echo "–°–æ–∑–¥–∞–π—Ç–µ SSH –∫–ª—é—á –∫–æ–º–∞–Ω–¥–æ–π: ssh-keygen -t ed25519"
    exit 1
fi

# –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ç—É–Ω–Ω–µ–ª–µ–π
echo ""
print_step "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ç—É–Ω–Ω–µ–ª—è:"
echo "1) Jupyter Notebook (–ø–æ—Ä—Ç 8888 -> localhost:8888)"
echo "2) Jupyter + Spark UI (–ø–æ—Ä—Ç—ã 8888, 4040 -> localhost:8888, 4040)"
echo "3) –ü–æ–ª–Ω—ã–π —Ç—É–Ω–Ω–µ–ª—å (Jupyter, Spark UI, Yarn, HDFS)"
echo "4) –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ç—É–Ω–Ω–µ–ª—å"
echo ""

read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (1-4): " choice

case $choice in
    1)
        TUNNELS="-L 8888:localhost:8888"
        DESCRIPTION="Jupyter Notebook"
        URLS=("http://localhost:8888")
        ;;
    2)
        TUNNELS="-L 8888:localhost:8888 -L 4040:localhost:4040"
        DESCRIPTION="Jupyter + Spark UI"
        URLS=("http://localhost:8888" "http://localhost:4040")
        ;;
    3)
        TUNNELS="-L 8888:localhost:8888 -L 4040:localhost:4040 -L 8088:localhost:8088 -L 9870:localhost:9870 -L 19888:localhost:19888"
        DESCRIPTION="–ü–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä —Å–µ—Ä–≤–∏—Å–æ–≤"
        URLS=("http://localhost:8888" "http://localhost:4040" "http://localhost:8088" "http://localhost:9870" "http://localhost:19888")
        ;;
    4)
        echo "–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä—Ç—ã –¥–ª—è —Ç—É–Ω–Ω–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: 8888 4040 8080):"
        read -a ports
        TUNNELS=""
        URLS=()
        for port in "${ports[@]}"; do
            TUNNELS="$TUNNELS -L ${port}:localhost:${port}"
            URLS+=("http://localhost:${port}")
        done
        DESCRIPTION="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –ø–æ—Ä—Ç—ã: ${ports[*]}"
        ;;
    *)
        print_error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
        exit 1
        ;;
esac

echo ""
print_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç—É–Ω–Ω–µ–ª—è: $DESCRIPTION"
echo ""

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç—É–Ω–Ω–µ–ª—è
print_step "–°–æ–∑–¥–∞–Ω–∏–µ SSH —Ç—É–Ω–Ω–µ–ª—è"
echo ""
print_warning "–¢—É–Ω–Ω–µ–ª—å –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ"
print_info "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: kill \$(pgrep -f 'ssh.*$CLUSTER_IP')"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç—É–Ω–Ω–µ–ª–∏
EXISTING_TUNNEL=$(pgrep -f "ssh.*$CLUSTER_IP" || true)
if [ -n "$EXISTING_TUNNEL" ]; then
    print_warning "–û–±–Ω–∞—Ä—É–∂–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç—É–Ω–Ω–µ–ª—å (PID: $EXISTING_TUNNEL)"
    read -p "–ó–∞–∫—Ä—ã—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç—É–Ω–Ω–µ–ª—å? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        kill "$EXISTING_TUNNEL"
        sleep 2
        print_success "–°—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç—É–Ω–Ω–µ–ª—å –∑–∞–∫—Ä—ã—Ç"
    else
        print_error "–û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
        exit 1
    fi
fi

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç—É–Ω–Ω–µ–ª—è —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
print_step "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"
SSH_CMD="ssh -N -f $TUNNELS -o ServerAliveInterval=60 -o ServerAliveCountMax=3 -o ExitOnForwardFailure=yes $USERNAME@$CLUSTER_IP"

echo "–ö–æ–º–∞–Ω–¥–∞ SSH: $SSH_CMD"
echo ""

if $SSH_CMD; then
    print_success "SSH —Ç—É–Ω–Ω–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!"
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ PID —Ç—É–Ω–Ω–µ–ª—è
    TUNNEL_PID=$(pgrep -f "ssh.*$CLUSTER_IP" || true)
    
    if [ -n "$TUNNEL_PID" ]; then
        print_success "PID —Ç—É–Ω–Ω–µ–ª—è: $TUNNEL_PID"
        
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç—É–Ω–Ω–µ–ª–µ
        cat > tunnel_info.txt << EOF
–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ SSH —Ç—É–Ω–Ω–µ–ª–µ
========================
–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: $(date)
–ö–ª–∞—Å—Ç–µ—Ä IP: $CLUSTER_IP
PID –ø—Ä–æ—Ü–µ—Å—Å–∞: $TUNNEL_PID
–û–ø–∏—Å–∞–Ω–∏–µ: $DESCRIPTION

–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ—Ä—Ç—ã:
EOF
        
        for url in "${URLS[@]}"; do
            echo "- $url" >> tunnel_info.txt
        done
        
        cat >> tunnel_info.txt << EOF

–ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:
- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞: ps aux | grep $TUNNEL_PID
- –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç—É–Ω–Ω–µ–ª—è: kill $TUNNEL_PID
- –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞: kill -9 $TUNNEL_PID
- –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Ç—É–Ω–Ω–µ–ª–µ–π: pkill -f 'ssh.*$CLUSTER_IP'

SSH –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä—è–º–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:
ssh $USERNAME@$CLUSTER_IP
EOF
        
        print_success "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ tunnel_info.txt"
    fi
    
    echo ""
    print_success "üéâ –¢—É–Ω–Ω–µ–ª—å –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!"
    echo ""
    print_info "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
    for url in "${URLS[@]}"; do
        echo "  üîó $url"
    done
    
    echo ""
    print_warning "–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—É–Ω–Ω–µ–ª—è: ps aux | grep 'ssh.*$CLUSTER_IP'"
    echo "  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç—É–Ω–Ω–µ–ª—è: kill \$(pgrep -f 'ssh.*$CLUSTER_IP')"
    echo "  –ü—Ä—è–º–æ–µ SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: ssh $USERNAME@$CLUSTER_IP"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Jupyter
    echo ""
    print_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Jupyter Notebook"
    sleep 3
    
    if curl -s -f http://localhost:8888 >/dev/null 2>&1; then
        print_success "Jupyter Notebook –¥–æ—Å—Ç—É–ø–µ–Ω: http://localhost:8888"
    else
        print_warning "Jupyter Notebook –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        print_info "–í–æ–∑–º–æ–∂–Ω–æ, —Å–µ—Ä–≤–∏—Å –µ—â–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∏–ª–∏ —Ç—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∞"
        print_info "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å: ./start_jupyter.sh"
    fi
    
else
    print_error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å SSH —Ç—É–Ω–Ω–µ–ª—å"
    echo ""
    print_info "–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:"
    echo "  1. –ù–µ–≤–µ—Ä–Ω—ã–µ SSH –∫–ª—é—á–∏"
    echo "  2. –ö–ª–∞—Å—Ç–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    echo "  3. –ó–∞–Ω—è—Ç—ã –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø–æ—Ä—Ç—ã"
    echo ""
    print_info "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: ssh $USERNAME@$CLUSTER_IP"
    exit 1
fi
